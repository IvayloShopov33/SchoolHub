@model ClassWithStudentsViewModel

@using SchoolHub.Services
@inject ITeacherService teacherService

@{
    ViewData["Title"] = "All Students";

    var number = 1;

    string teacherId = null;
    if (!this.User.IsAdmin() && !this.User.IsStudent())
    {
        teacherId = await this.teacherService.GetTeacherIdByUserIdAsync(this.User.GetId());
    }
}

<div class="container my-5">
    <h2 class="text-center mb-4">All Students of Class - @HtmlEncodeHelper.EscapeHtmlSpecialCharacters(Model.Name)</h2>

    <div class="row justify-content-center mb-4">
        <div class="col-lg-8">
            @if (Model.Students == null || !Model.Students.Any())
            {
                <div class="alert alert-info text-center" role="alert">
                    No students are enrolled in this class yet.
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-bordered table-hover">
                        <thead class="thead-light">
                            <tr>
                                <th scope="col">Number</th>
                                <th scope="col">Full Name</th>
                                <th scope="col">Birth Date</th>
                                <th scope="col">Username</th>
                                <th scope="col">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var student in Model.Students)
                            {
                                <tr>
                                    <td>@number</td>
                                    <td>@HtmlEncodeHelper.EscapeHtmlSpecialCharacters(student.FullName)</td>
                                    <td>@HtmlEncodeHelper.EscapeHtmlSpecialCharacters(student.BirthDate)</td>
                                    <td>@HtmlEncodeHelper.EscapeHtmlSpecialCharacters(student.Username)</td>
                                    <td class="text-center">
                                        @if (teacherId != null || this.User.IsAdmin() || (User.Identity.IsAuthenticated && User.Identity.Name == student.Username))
                                        {
                                            <a asp-controller="Absence" asp-action="Index" asp-route-studentId="@student.Id" class="btn btn-outline-info btn-sm">View Absences</a>
                                            <a asp-controller="Grade" asp-action="Index" asp-route-studentId="@student.Id" class="btn btn-outline-primary btn-sm">View Grades</a>
                                        }

                                        @if (this.User.IsAdmin() || (User.Identity.IsAuthenticated && User.Identity.Name == student.Username))
                                        {                                    
                                            <a asp-controller="Student" asp-action="Edit" asp-route-id="@student.Id" class="btn btn-outline-warning btn-sm">Edit</a>
                                        }
                                        
                                        @if (this.User.IsAdmin())
                                        {
                                            <a asp-controller="Student" asp-action="Delete" asp-route-id="@student.Id" class="btn btn-outline-danger btn-sm">Delete</a>
                                        }
                                    </td>
                                </tr>

                                number++;
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>
